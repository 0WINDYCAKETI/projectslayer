local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (3==v29) then function v36()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (0==v43) then v44=v35();v45=v35();v43=1;end if (1==v43) then v46=1;v47=(v32(v45,1,20) * (2^32)) + v44 ;v43=2;end if (v43==3) then if (v48==0) then if (v47==0) then return v49 * 0 ;else local v120=0;while true do if (v120==0) then v48=1;v46=0;break;end end end elseif (v48==(2924 -(282 + 595))) then return ((v47==0) and (v49 * (1/0))) or (v49 * NaN) ;end return v16(v49,v48-1023 ) * (v46 + (v47/(2^52))) ;end if (v43==2) then v48=v32(v45,21,31);v49=((v32(v45,32)==(1 + 0)) and  -(1 + 0)) or 1 ;v43=3;end end end v37=nil;function v37(v50)local v51;if  not v50 then v50=v35();if (v50==(1637 -(1523 + 114))) then return "";end end v51=v11(v27,v30,(v30 + v50) -1 );v30=v30 + v50 ;local v52={};for v79=1, #v51 do v52[v79]=v10(v9(v11(v51,v79,v79)));end return v14(v52);end v38=v35;v29=4;end if (v29==1) then function v32(v53,v54,v55)if v55 then local v95=0;local v96;while true do if (v95==0) then v96=(v53/(2^(v54-(1 -0))))%(2^(((v55-1) -(v54-1)) + (2 -1))) ;return v96-(v96%(620 -(555 + 64))) ;end end else local v97=0;local v98;while true do if (v97==0) then v98=2^(v54-1) ;return (((v53%(v98 + v98))>=v98) and 1) or 0 ;end end end end v33=nil;function v33()local v56=0;local v57;while true do if (v56==1) then return v57;end if (0==v56) then v57=v9(v27,v30,v30);v30=v30 + 1 ;v56=1;end end end v34=nil;v29=2;end if (v29==0) then v30=2 -1 ;v31=nil;v27=v12(v11(v27,5),v7("\145\103","\59\191\73\224\54"),function(v58)if (v9(v58,2)==79) then local v99=0;while true do if (v99==0) then v31=v8(v11(v58,1,1));return "";end end else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v58,45 -29 ));if v31 then local v121=0;local v122;while true do if (v121==0) then v122=v13(v101,v31);v31=nil;v121=1;end if (v121==1) then return v122;end end else return v101;end break;end end end end);v32=nil;v29=1;end if (5==v29) then v41=nil;function v41(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[120 -(32 + 85) ];return function(...)local v81=v62;local v82=v63;local v83=v64;local v84=v39;local v85=1 + 0 ;local v86= -1;local v87={};local v88={...};local v89=v20("#",...) -1 ;local v90={};local v91={};for v102=0,v89 do if (v102>=v83) then v87[v102-v83 ]=v88[v102 + 1 ];else v91[v102]=v88[v102 + 1 ];end end local v92=(v89-v83) + 1 ;local v93;local v94;while true do local v103=0;while true do if (v103==1) then if (v94<=42) then if (v94<=20) then if (v94<=9) then if (v94<=4) then if (v94<=1) then if (v94>0) then local v138=0;local v139;local v140;local v141;while true do if (v138==0) then v139=v93[2];v140=v91[v139 + 2 ];v138=1;end if (v138==2) then if (v140>0) then if (v141<=v91[v139 + 1 ]) then local v409=0;while true do if (0==v409) then v85=v93[3];v91[v139 + 3 ]=v141;break;end end end elseif (v141>=v91[v139 + (958 -(892 + 65)) ]) then v85=v93[3];v91[v139 + 3 ]=v141;end break;end if (v138==1) then v141=v91[v139] + v140 ;v91[v139]=v141;v138=2;end end elseif  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=2) then v91[v93[2]]=v61[v93[3]];elseif (v94==3) then if (v93[2]==v91[v93[9 -5 ]]) then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[3 -1 ]][v93[3]]=v93[4];end elseif (v94<=6) then if (v94==5) then local v144=v93[2];local v145,v146=v84(v91[v144](v91[v144 + 1 ]));v86=(v146 + v144) -1 ;local v147=0;for v224=v144,v86 do local v225=0;while true do if (v225==0) then v147=v147 + (1 -0) ;v91[v224]=v145[v147];break;end end end else local v148=v93[2];local v149=v91[v148 + 2 ];local v150=v91[v148] + v149 ;v91[v148]=v150;if (v149>(350 -(87 + 263))) then if (v150<=v91[v148 + 1 ]) then local v321=0;while true do if (0==v321) then v85=v93[3];v91[v148 + 3 ]=v150;break;end end end elseif (v150>=v91[v148 + 1 ]) then v85=v93[3];v91[v148 + 3 ]=v150;end end elseif (v94<=7) then v91[v93[2]][v91[v93[183 -(67 + 113) ]]]=v93[4];elseif (v94>8) then local v235=v93[2 + 0 ];do return v91[v235](v21(v91,v235 + 1 ,v93[3]));end else v91[v93[2]]=v91[v93[3]][v93[4]];end elseif (v94<=14) then if (v94<=11) then if (v94==10) then local v154=0;local v155;local v156;while true do if (v154==1) then for v324=v155 + 1 ,v86 do v15(v156,v91[v324]);end break;end if (v154==0) then v155=v93[2];v156=v91[v155];v154=1;end end else v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;end elseif (v94<=12) then v91[v93[2]][v91[v93[3]]]=v91[v93[4]];elseif (v94>13) then v85=v93[3];else v91[v93[2]][v91[v93[3]]]=v91[v93[4]];end elseif (v94<=17) then if (v94<=15) then v91[v93[2]]=v93[3];elseif (v94>16) then local v241=v93[2];v91[v241](v21(v91,v241 + 1 ,v86));else local v242=0;local v243;while true do if (v242==0) then v243=v93[2];do return v91[v243](v21(v91,v243 + (2 -1) ,v93[3]));end break;end end end elseif (v94<=18) then local v162=v93[2];local v163=v91[v162];local v164=v91[v162 + 2 ];if (v164>0) then if (v163>v91[v162 + 1 ]) then v85=v93[3];else v91[v162 + 3 ]=v163;end elseif (v163<v91[v162 + 1 ]) then v85=v93[3];else v91[v162 + 3 ]=v163;end elseif (v94==19) then local v244=0;local v245;local v246;local v247;while true do if (v244==1) then v247=v91[v245 + 2 ];if (v247>(0 + 0)) then if (v246>v91[v245 + 1 ]) then v85=v93[3];else v91[v245 + 3 ]=v246;end elseif (v246<v91[v245 + 1 ]) then v85=v93[3];else v91[v245 + 3 ]=v246;end break;end if (v244==0) then v245=v93[2];v246=v91[v245];v244=1;end end else v85=v93[3];end elseif (v94<=31) then if (v94<=(99 -74)) then if (v94<=(974 -(802 + 150))) then if (v94>21) then local v165=0;local v166;local v167;local v168;while true do if (v165==0) then v166=v82[v93[3]];v167=nil;v165=1;end if (1==v165) then v168={};v167=v18({},{[v7("\216\61\243\199\227\7\226","\169\135\98\154")]=function(v329,v330)local v331=0;local v332;while true do if (v331==0) then v332=v168[v330];return v332[1][v332[2]];end end end,[v7("\244\72\42\81\234\58\198\207\114\60","\168\171\23\68\52\157\83")]=function(v333,v334,v335)local v336=v168[v334];v336[2 -1 ][v336[2]]=v335;end});v165=2;end if (v165==2) then for v338=1,v93[6 -2 ] do local v339=0;local v340;while true do if (v339==1) then if (v340[998 -(915 + 82) ]==(96 -62)) then v168[v338-1 ]={v91,v340[3]};else v168[v338-1 ]={v60,v340[3]};end v90[ #v90 + 1 + 0 ]=v168;break;end if (v339==0) then v85=v85 + 1 + 0 ;v340=v81[v85];v339=1;end end end v91[v93[2]]=v41(v166,v167,v61);break;end end else v91[v93[2]]=v61[v93[3]];end elseif (v94<=23) then v91[v93[2]]=v91[v93[3]]%v93[4] ;elseif (v94>24) then v91[v93[2]][v93[3]]=v91[v93[4]];elseif v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=28) then if (v94<=26) then v91[v93[2 -0 ]][v91[v93[3]]]=v93[4];elseif (v94>27) then v91[v93[1189 -(1069 + 118) ]]=v60[v93[3]];else do return;end end elseif (v94<=29) then local v174=0;local v175;local v176;local v177;local v178;while true do if (0==v174) then v175=v93[2];v176,v177=v84(v91[v175](v21(v91,v175 + (2 -1) ,v86)));v174=1;end if (v174==1) then v86=(v177 + v175) -1 ;v178=0;v174=2;end if (v174==2) then for v342=v175,v86 do v178=v178 + 1 ;v91[v342]=v176[v178];end break;end end elseif (v94==30) then if v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else local v253=0;local v254;local v255;while true do if (v253==0) then v254=v93[2];v255={};v253=1;end if (v253==1) then for v389=1, #v90 do local v390=0;local v391;while true do if (v390==0) then v391=v90[v389];for v436=0, #v391 do local v437=0;local v438;local v439;local v440;while true do if (v437==1) then v440=v438[2];if ((v439==v91) and (v440>=v254)) then v255[v440]=v439[v440];v438[1 -0 ]=v255;end break;end if (v437==0) then v438=v391[v436];v439=v438[1];v437=1;end end end break;end end end break;end end end elseif (v94<=36) then if (v94<=33) then if (v94==32) then v91[v93[2]]=v91[v93[3]] + v93[4] ;else local v180=v93[2];v91[v180](v21(v91,v180 + 1 ,v93[3]));end elseif (v94<=(6 + 28)) then v91[v93[3 -1 ]]=v91[v93[3]];elseif (v94>35) then local v256=0;local v257;local v258;while true do if (1==v256) then for v392=v257 + 1 + 0 ,v93[795 -(368 + 423) ] do v258=v258   .. v91[v392] ;end v91[v93[2]]=v258;break;end if (v256==0) then v257=v93[3];v258=v91[v257];v256=1;end end else do return v91[v93[2]]();end end elseif (v94<=39) then if (v94<=37) then local v183=v93[6 -4 ];v91[v183](v91[v183 + (19 -(10 + 8)) ]);elseif (v94==38) then local v259=v93[2];v91[v259]=v91[v259](v21(v91,v259 + 1 ,v86));elseif (v93[7 -5 ]==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=40) then do return;end elseif (v94==41) then local v261=0;local v262;local v263;while true do if (v261==1) then for v393=v262 + 1 ,v93[4] do v263=v263   .. v91[v393] ;end v91[v93[2]]=v263;break;end if (v261==0) then v262=v93[3];v263=v91[v262];v261=1;end end else v91[v93[2]]={};end elseif (v94<=63) then if (v94<=52) then if (v94<=47) then if (v94<=(486 -(416 + 26))) then if (v94>43) then v91[v93[2]]=v93[3];else v91[v93[2]]=v93[3] + v91[v93[12 -8 ]] ;end elseif (v94<=45) then local v187=0;local v188;while true do if (v187==0) then v188=v93[2];v91[v188]=v91[v188](v21(v91,v188 + 1 ,v93[3]));break;end end elseif (v94==46) then if (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end else local v265=v93[2];do return v21(v91,v265,v86);end end elseif (v94<=49) then if (v94==(21 + 27)) then do return v91[v93[2]]();end else for v226=v93[2],v93[3] do v91[v226]=nil;end end elseif (v94<=50) then v91[v93[2]]=v41(v82[v93[3]],nil,v61);elseif (v94==51) then v91[v93[2]]=v41(v82[v93[3]],nil,v61);else v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;end elseif (v94<=57) then if (v94<=54) then if (v94==53) then local v190=0;local v191;while true do if (v190==0) then v191=v93[2];v91[v191]=v91[v191]();break;end end else v91[v93[2]]={};end elseif (v94<=55) then v91[v93[2]]=v91[v93[3]] + v93[6 -2 ] ;elseif (v94>56) then v91[v93[440 -(145 + 293) ]]= #v91[v93[3]];else local v269=0;local v270;while true do if (v269==0) then v270=v93[2];v91[v270]=v91[v270](v21(v91,v270 + 1 ,v86));break;end end end elseif (v94<=60) then if (v94<=58) then v91[v93[2]]=v93[3] + v91[v93[4]] ;elseif (v94>59) then local v271=0;local v272;local v273;while true do if (v271==1) then for v394=v272 + 1 ,v86 do v15(v273,v91[v394]);end break;end if (v271==0) then v272=v93[2];v273=v91[v272];v271=1;end end elseif (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=61) then local v195=0;local v196;local v197;local v198;local v199;while true do if (0==v195) then v196=v93[2];v197,v198=v84(v91[v196](v21(v91,v196 + 1 ,v93[3])));v195=1;end if (v195==1) then v86=(v198 + v196) -1 ;v199=0;v195=2;end if (v195==2) then for v349=v196,v86 do v199=v199 + 1 ;v91[v349]=v197[v199];end break;end end elseif (v94==62) then local v274=v93[2];v91[v274](v21(v91,v274 + 1 ,v86));else v91[v93[2]][v93[433 -(44 + 386) ]]=v93[4];end elseif (v94<=74) then if (v94<=68) then if (v94<=65) then if (v94>64) then v91[v93[2]]=v60[v93[3]];else v91[v93[2]]=v91[v93[3]]%v93[4] ;end elseif (v94<=66) then for v228=v93[2],v93[3] do v91[v228]=nil;end elseif (v94>67) then local v277=0;local v278;local v279;while true do if (v277==1) then v91[v278 + 1 ]=v279;v91[v278]=v279[v93[4]];break;end if (v277==0) then v278=v93[2];v279=v91[v93[3]];v277=1;end end else local v280=0;local v281;local v282;while true do if (v280==0) then v281=v93[1488 -(998 + 488) ];v282=v91[v93[1 + 2 ]];v280=1;end if (v280==1) then v91[v281 + 1 ]=v282;v91[v281]=v282[v93[4]];break;end end end elseif (v94<=71) then if (v94<=(57 + 12)) then local v203=0;local v204;local v205;local v206;local v207;while true do if (v203==2) then for v352=v204,v86 do v207=v207 + 1 ;v91[v352]=v205[v207];end break;end if (v203==0) then v204=v93[2];v205,v206=v84(v91[v204](v21(v91,v204 + 1 ,v93[775 -(201 + 571) ])));v203=1;end if (1==v203) then v86=(v206 + v204) -(1139 -(116 + 1022)) ;v207=0;v203=2;end end elseif (v94>70) then local v283=v93[2];v91[v283](v21(v91,v283 + 1 ,v93[3]));else local v284=0;local v285;local v286;local v287;local v288;while true do if (v284==2) then for v395=v285,v86 do v288=v288 + 1 ;v91[v395]=v286[v288];end break;end if (v284==1) then v86=(v287 + v285) -1 ;v288=0;v284=2;end if (v284==0) then v285=v93[2];v286,v287=v84(v91[v285](v91[v285 + 1 ]));v284=1;end end end elseif (v94<=72) then local v208=0;local v209;local v210;while true do if (1==v208) then for v355=1, #v90 do local v356=0;local v357;while true do if (v356==0) then v357=v90[v355];for v418=0, #v357 do local v419=0;local v420;local v421;local v422;while true do if (v419==1) then v422=v420[2];if ((v421==v91) and (v422>=v209)) then local v449=0;while true do if (v449==0) then v210[v422]=v421[v422];v420[1]=v210;break;end end end break;end if (v419==0) then v420=v357[v418];v421=v420[1];v419=1;end end end break;end end end break;end if (v208==0) then v209=v93[8 -6 ];v210={};v208=1;end end elseif (v94>73) then local v289=v93[2];v91[v289]=v91[v289](v21(v91,v289 + 1 ,v93[3]));else local v291=v93[2];v91[v291](v91[v291 + 1 ]);end elseif (v94<=(47 + 32)) then if (v94<=(277 -201)) then if (v94==75) then v91[v93[2]][v93[3]]=v91[v93[14 -10 ]];else v91[v93[2]]= #v91[v93[3]];end elseif (v94<=77) then local v214=v93[2];local v215,v216=v84(v91[v214](v21(v91,v214 + 1 ,v86)));v86=(v216 + v214) -1 ;local v217=0;for v230=v214,v86 do local v231=0;while true do if (v231==0) then v217=v217 + 1 ;v91[v230]=v215[v217];break;end end end elseif (v94==78) then v91[v93[2]]=v91[v93[3]][v91[v93[4]]];else v91[v93[2]]=v91[v93[3]];end elseif (v94<=82) then if (v94<=(939 -(814 + 45))) then v91[v93[2]]=v91[v93[3]][v93[4]];elseif (v94>81) then local v296=v93[2];do return v21(v91,v296,v86);end else v91[v93[2]]=v91[v93[3]][v91[v93[4]]];end elseif (v94<=83) then local v220=v93[2];v91[v220]=v91[v220]();elseif (v94>(206 -122)) then if  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else local v299=0;local v300;local v301;local v302;while true do if (v299==1) then v302={};v301=v18({},{[v7("\203\78\252\163\33\40\159","\231\148\17\149\205\69\77")]=function(v398,v399)local v400=v302[v399];return v400[1][v400[1 + 1 ]];end,[v7("\191\152\201\254\64\246\142\163\194\227","\159\224\199\167\155\55")]=function(v401,v402,v403)local v404=0;local v405;while true do if (v404==0) then v405=v302[v402];v405[1][v405[2]]=v403;break;end end end});v299=2;end if (v299==0) then v300=v82[v93[3]];v301=nil;v299=1;end if (v299==2) then for v406=1,v93[4] do local v407=0;local v408;while true do if (v407==0) then v85=v85 + 1 + 0 ;v408=v81[v85];v407=1;end if (v407==1) then if (v408[886 -(261 + 624) ]==34) then v302[v406-1 ]={v91,v408[3]};else v302[v406-1 ]={v60,v408[3]};end v90[ #v90 + 1 ]=v302;break;end end end v91[v93[1082 -(1020 + 60) ]]=v41(v300,v301,v61);break;end end end v85=v85 + 1 ;break;end if (v103==0) then v93=v81[v85];v94=v93[1 + 0 ];v103=1;end end end end;end return v41(v40(),{},v28)(...);end if (2==v29) then function v34()local v65,v66=v9(v27,v30,v30 + (933 -(857 + 74)) );v30=v30 + 2 ;return (v66 * (824 -(367 + 201))) + v65 ;end v35=nil;function v35()local v67=0;local v68;local v69;local v70;local v71;while true do if (v67==1) then return (v71 * 16777216) + (v70 * 65536) + (v69 * 256) + v68 ;end if (v67==0) then v68,v69,v70,v71=v9(v27,v30,v30 + (930 -(214 + 713)) );v30=v30 + 4 ;v67=1;end end end v36=nil;v29=3;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v72=0;local v73;local v74;local v75;local v76;local v77;local v78;while true do if (2==v72) then for v109=1,v35() do local v110=0;local v111;while true do if (v110==0) then v111=v33();if (v32(v111,1,1)==0) then local v124=v32(v111,2,3);local v125=v32(v111,4,6);local v126={v34(),v34(),nil,nil};if (v124==0) then v126[3]=v34();v126[4]=v34();elseif (v124==1) then v126[3]=v35();elseif (v124==2) then v126[3 -0 ]=v35() -(2^16) ;elseif (v124==3) then v126[3]=v35() -(2^16) ;v126[4]=v34();end if (v32(v125,1,1)==1) then v126[2]=v78[v126[1067 -(68 + 997) ]];end if (v32(v125,2,2)==1) then v126[3]=v78[v126[1273 -(226 + 1044) ]];end if (v32(v125,3,3)==1) then v126[4]=v78[v126[4]];end v73[v109]=v126;end break;end end end for v112=4 -3 ,v35() do v74[v112-1 ]=v40();end return v76;end if (v72==0) then v73={};v74={};v75={};v76={v73,v74,nil,v75};v72=1;end if (v72==1) then v77=v35();v78={};for v114=1,v77 do local v115=0;local v116;local v117;while true do if (v115==0) then v116=v33();v117=nil;v115=1;end if (v115==1) then if (v116==1) then v117=v33()~=0 ;elseif (v116==2) then v117=v36();elseif (v116==3) then v117=v37();end v78[v114]=v117;break;end end end v76[3]=v33();v72=2;end end end v29=5;end end end vv17(),...);
